PROGRAM FOR IMPLEMENTATION OF CIRCULAR QUEUE:

#include <iostream>

using namespace std;

class CircularQueue {
private:
    int front;
    int rear;
    int maxSize;
    int* arr;

public:
    CircularQueue(int size) {
        maxSize = size;
        arr = new int[maxSize];
        front = rear = -1;
    }

    bool isEmpty() {
        return (front == -1 && rear == -1);
    }

    bool isFull() {
        return (front == (rear + 1) % maxSize);
    }

    void enqueue(int value) {
        if (isFull()) {
            cout << "Queue is full. Cannot enqueue." << endl;
        } else {
            if (isEmpty()) {
                front = rear = 0;
            } else {
                rear = (rear + 1) % maxSize;
            }
            arr[rear] = value;
            cout << "Enqueued: " << value << endl;
        }
    }

    void dequeue() {
        if (isEmpty()) {
            cout << "Queue is empty. Cannot dequeue." << endl;
        } else {
            int value = arr[front];
            cout << "Dequeued: " << value << endl;
            if (front == rear) {
                front = rear = -1;
            } else {
                front = (front + 1) % maxSize;
            }
        }
    }

    void display() {
        if (isEmpty()) {
            cout << "Queue is empty." << endl;
        } else {
            cout << "Queue elements: ";
            int i = front;
            while (true) {
                cout << arr[i] << " ";
                if (i == rear) break;
                i = (i + 1) % maxSize;
            }
            cout << endl;
        }
    }
};

int main() {
    int size;
    cout << "Enter the size of the circular queue: ";
    cin >> size;

    CircularQueue queue(size);

    int choice, value;

    while (true) {
        cout << "1. Enqueue  2. Dequeue  3. Display  4. Quit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter the value to enqueue: ";
                cin >> value;
                queue.enqueue(value);
                break;
            case 2:
                queue.dequeue();
                break;
            case 3:
                queue.display();
                break;
            case 4:
                return 0;
            default:
                cout << "Invalid choice. Try again." << endl;
        }
    }

    return 0;
}


OUTPUT OF PROGRAM:
Enter the size of the circular queue: 10
1. Enqueue  2. Dequeue  3. Display  4. Quit
Enter your choice: 1
Enter the value to enqueue: 20
Enqueued: 20
1. Enqueue  2. Dequeue  3. Display  4. Quit
Enter your choice: 2
Dequeued: 20
1. Enqueue  2. Dequeue  3. Display  4. Quit
Enter your choice: 1
Enter the value to enqueue: 30
Enqueued: 30
1. Enqueue  2. Dequeue  3. Display  4. Quit
Enter your choice: 3
Queue elements: 30
1. Enqueue  2. Dequeue  3. Display  4. Quit
Enter your choice: 4